diff --git a/configure.ac b/configure.ac
index e57ef7c..f15a4ea 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2211,10 +2211,21 @@
 AC_HEADER_DIRENT
 AC_HEADER_MAJOR
 
+AC_ARG_WITH([bluetoothdir],
+  [AS_HELP_STRING([--with-bluetoothdir=DIR], [Path to bluetooth/bluetooth.h header])],
+  [bluetoothdir=$withval],
+  [bluetoothdir=""])
+
+if test "$bluetoothdir" != ""
+then
+	BLUETOOTH_CFLAGS="-I$bluetoothdir"
+	AC_SUBST([BLUETOOTH_CFLAGS], [$BLUETOOTH_CFLAGS])
+fi
+
 # bluetooth/bluetooth.h has been known to not compile with -std=c99.
 # http://permalink.gmane.org/gmane.linux.bluez.kernel/22294
 SAVE_CFLAGS=$CFLAGS
-CFLAGS="-std=c99 $CFLAGS"
+CFLAGS="-std=c99 $CFLAGS $BLUETOOTH_CFLAGS"
 AC_CHECK_HEADERS(bluetooth/bluetooth.h)
 CFLAGS=$SAVE_CFLAGS
 
diff --git a/setup.py b/setup.py
index 20d7f35..5d8ab7e 100644
--- a/setup.py
+++ b/setup.py
@@ -1127,9 +1127,10 @@
                                libraries=libs))
 
     def detect_socket(self):
+        bluetooth_includes = [@bluetoothdir@]
         # socket(2)
         if not VXWORKS:
-            kwargs = {'depends': ['socketmodule.h']}
+            kwargs = {'depends': ['socketmodule.h'], 'include_dirs': bluetooth_includes}
             if MACOS:
                 # Issue #35569: Expose RFC 3542 socket options.
                 kwargs['extra_compile_args'] = ['-D__APPLE_USE_RFC_3542']
@@ -1139,7 +1140,8 @@
             libs = ['net']
             self.add(Extension('_socket', ['socketmodule.c'],
                                depends=['socketmodule.h'],
-                               libraries=libs))
+                               libraries=libs,
+                               include_dirs=bluetooth_includes))

     def detect_dbm_gdbm(self):
         # Modules that provide persistent dictionary-like semantics.  You will
@@ -2322,6 +2324,7 @@
             return [v.strip() for v in value.split(sep) if v.strip()]

         openssl_includes = split_var('OPENSSL_INCLUDES', '-I')
+        openssl_includes = openssl_includes + (@bluetoothdir@,)
         openssl_libdirs = split_var('OPENSSL_LDFLAGS', '-L')
         openssl_libs = split_var('OPENSSL_LIBS', '-l')
         if not openssl_libs:
 